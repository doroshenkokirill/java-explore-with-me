{
	"info": {
		"_postman_id": "0d26fe16-9d66-424c-b0ae-240940ad6989",
		"name": "Explore with me Tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "35193608"
	},
	"item": [
		{
			"name": "stat",
			"item": [
				{
					"name": "Create hit",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const main = async () => {",
									"    const api = new API(pm);",
									"    const rnd = new RandomUtils();",
									"",
									"    try {",
									"        user = rnd.getUser();",
									"        pm.collectionVariables.set(\"userName\", user.name);",
									"        pm.collectionVariables.set(\"userEmail\", user.email);",
									"    } catch(err) {",
									"        console.error(\"Ошибка при подготовке тестовых данных.\", err);",
									"    }",
									"",
									"};",
									"",
									"const interval = setInterval(() => {}, 1000);",
									"",
									"setTimeout(async () => ",
									"    {",
									"        try {",
									"            await main();",
									"        } catch (e) {",
									"            console.error(e);",
									"        } finally {",
									"            clearInterval(interval);",
									"        }",
									"    },  ",
									"    100 ",
									");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 or 201\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
									"});",
									"pm.test(\"Response have body\", function () {",
									"    pm.response.to.be.withBody;",
									"    pm.response.to.be.json;",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"app\": \"ewm-main-service\",\n  \"uri\": \"/events/1\",\n  \"ip\": \"192.163.0.1\",\n  \"timestamp\": \"2022-09-06 11:00:23\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8080/hit",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"hit"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get stats",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const main = async () => {",
									"    const api = new API(pm);",
									"    const rnd = new RandomUtils();",
									"",
									"    try {",
									"        user = rnd.getUser();",
									"        us = await api.addUser(user);",
									"        pm.collectionVariables.set(\"userId\", us.id);",
									"        pm.collectionVariables.set(\"userName\", us.name);",
									"        pm.collectionVariables.set(\"userEmail\", us.email);",
									"",
									"    } catch(err) {",
									"        console.error(\"Ошибка при подготовке тестовых данных.\", err);",
									"    }",
									"",
									"};",
									"",
									"const interval = setInterval(() => {}, 1000);",
									"",
									"setTimeout(async () => ",
									"    {",
									"        try {",
									"            await main();",
									"        } catch (e) {",
									"            console.error(e);",
									"        } finally {",
									"            clearInterval(interval);",
									"        }",
									"    },  ",
									"    100 ",
									");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.be.ok;",
									"});",
									"pm.test(\"Response have body\", function () {",
									"    pm.response.to.be.withBody;",
									"    pm.response.to.be.json;",
									"});",
									"pm.test(\"Test user 'id' field\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('id');",
									"    var id = pm.collectionVariables.get(\"userId\");",
									"    pm.expect(jsonData.id, '\"id\" must be ' + id).to.eql(Number(id));",
									"});",
									"pm.test(\"Test user 'email' field\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('email');",
									"    var email = pm.collectionVariables.get(\"userEmail\");",
									"    pm.expect(jsonData.email, '\"email\" must be ' + email).to.eql(email);",
									"});",
									"pm.test(\"Test user 'name' field\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('name');",
									"    var name = pm.collectionVariables.get(\"userName\");",
									"    pm.expect(jsonData.name, '\"name\" must be ' + name).to.eql(name);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "  {\n    \"app\": \"ewm-main-service\",\n    \"uri\": \"/events/1\",\n    \"hits\": 6\n  }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8080/stats",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"stats"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}